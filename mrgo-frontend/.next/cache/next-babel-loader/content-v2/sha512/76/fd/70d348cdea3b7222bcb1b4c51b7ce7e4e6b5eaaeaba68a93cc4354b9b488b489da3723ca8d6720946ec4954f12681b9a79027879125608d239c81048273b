{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WorkSpace\\\\srpj3\\\\srpj2\\\\mrgo-frontend\\\\pages\\\\_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { createGlobalStyle, ServerStyleSheet } from 'styled-components';\nimport globalReset from '../styles/globalReset';\nimport fonts from '../styles/fonts';\nconst GlobalStyle = createGlobalStyle`\n  ${globalReset}\n  ${fonts}\n  html, body {\n    height: 100%;\n    font-family: 'SpoqaHanSans', sans-serif;\n  }\n  #__next {    \n    height: 100%;\n  }\n`;\nexport default class AppDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [initialProps.styles, sheet.getStyleElement()]\n        }, void 0, true)\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"ko\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"keywords\",\n          content: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"Description\",\n          content: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          httpEquiv: \"Content-Type\",\n          content: \"text/html; charset=utf-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/WorkSpace/srpj3/srpj2/mrgo-frontend/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","createGlobalStyle","ServerStyleSheet","globalReset","fonts","GlobalStyle","AppDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,mBAApD;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,MAAMC,WAAW,GAAGJ,iBAAkB;AACtC,IAAIE,WAAY;AAChB,IAAIC,KAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,eAAe,MAAME,WAAN,SAA0BV,QAA1B,CAAmC;AAChD,eAAaW,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,IAAIP,gBAAJ,EAAd;AACA,UAAMQ,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IACtBL,KAAK,CAACM,aAAN,eACE;AAAA,kCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADF;AAFe,OAAD,CADpB;;AAWA,YAAME,YAAY,GAAG,MAAMpB,QAAQ,CAACW,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6CACKQ,YADL;AAEEC,QAAAA,MAAM,eACJ;AAAA,qBACGD,YAAY,CAACC,MADhB,EAEGR,KAAK,CAACS,eAAN,EAFH;AAAA;AAHJ;AASD,KAtBD,SAsBU;AACRT,MAAAA,KAAK,CAACU,IAAN;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE;AAAM,UAAA,IAAI,EAAC,UAAX;AAAsB,UAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,OAAO,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9C+C","sourcesContent":["import React from 'react';\r\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\r\nimport { createGlobalStyle, ServerStyleSheet } from 'styled-components';\r\n\r\nimport globalReset from '../styles/globalReset';\r\nimport fonts from '../styles/fonts';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${globalReset}\r\n  ${fonts}\r\n  html, body {\r\n    height: 100%;\r\n    font-family: 'SpoqaHanSans', sans-serif;\r\n  }\r\n  #__next {    \r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default class AppDocument extends Document {\r\n  static async getInitialProps(ctx) {\r\n    const sheet = new ServerStyleSheet();\r\n    const originalRenderPage = ctx.renderPage;\r\n\r\n    try {\r\n      ctx.renderPage = () =>\r\n        originalRenderPage({\r\n          enhanceApp: App => props =>\r\n            sheet.collectStyles(\r\n              <>\r\n                <GlobalStyle />\r\n                <App {...props} />\r\n              </>,\r\n            ),\r\n        });\r\n\r\n      const initialProps = await Document.getInitialProps(ctx);\r\n      return {\r\n        ...initialProps,\r\n        styles: (\r\n          <>\r\n            {initialProps.styles}\r\n            {sheet.getStyleElement()}\r\n          </>\r\n        ),\r\n      };\r\n    } finally {\r\n      sheet.seal();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Html lang=\"ko\">\r\n        <Head>\r\n          <meta name=\"keywords\" content=\"\" />\r\n          <meta name=\"Description\" content=\"\" />\r\n          <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </Html>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}