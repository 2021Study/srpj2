{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WorkSpace\\\\srpj3\\\\srpj2\\\\mrgo-frontend\\\\components\\\\modules\\\\InputWithButton.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport palette from '../../styles/palette';\nimport { InputBlock, Label, StyledInput, MessageBlock } from './Input';\n\nconst InputWithButton = ({\n  buttonColor,\n  buttonText,\n  error,\n  inputRef,\n  label,\n  pattern,\n  placeholder,\n  style,\n  type,\n  isButtonActive,\n  isShowClearButton,\n  value,\n  onChange,\n  disabled,\n  onBlur = () => {},\n  onClickButton\n}) => {\n  const clearBtnRef = useRef();\n  const {\n    0: showClear,\n    1: setShowClear\n  } = useState(false);\n  useEffect(() => {\n    const handleClearButton = e => {\n      if (e.target === clearBtnRef.current) onChange({\n        target: {\n          value: ''\n        }\n      });\n    };\n\n    window.addEventListener('mousedown', handleClearButton);\n    return () => window.removeEventListener('mousedown', handleClearButton);\n  }, [onChange]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(InputBlock, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInputWithButton, {\n        tabIndex: 0,\n        ref: inputRef,\n        isShowClearButton: isShowClearButton,\n        isError: error,\n        pattern: pattern,\n        placeholder: placeholder,\n        style: style,\n        type: type,\n        value: value,\n        onFocus: () => setShowClear(true),\n        onBlur: () => {\n          onBlur();\n          setShowClear(false);\n        },\n        onChange: onChange,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputAbsBlock, {\n        children: /*#__PURE__*/_jsxDEV(InputAbsButton, {\n          tabIndex: 0,\n          buttonColor: buttonColor,\n          isActive: isButtonActive,\n          onClick: onClickButton,\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(MessageBlock, {\n        type: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nInputWithButton.propTypes = {\n  buttonColor: PropTypes.string,\n  buttonText: PropTypes.string,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  inputRef: PropTypes.shape({\n    current: PropTypes.oneOfType([PropTypes.bool, PropTypes.any])\n  }),\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  style: PropTypes.shape({}),\n  type: PropTypes.oneOf(['text', 'number', 'email']),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isButtonActive: PropTypes.bool,\n  isShowClearButton: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClickButton: PropTypes.func,\n  disabled: PropTypes.bool\n};\nInputWithButton.defaultProps = {\n  buttonText: 'button',\n  buttonColor: palette.primary.blue,\n  error: false,\n  inputRef: undefined,\n  label: undefined,\n  pattern: undefined,\n  placeholder: 'placeholder',\n  style: undefined,\n  type: 'text',\n  value: '',\n  isButtonActive: false,\n  isShowClearButton: false,\n  disabled: false,\n  onChange: () => {},\n  onBlur: () => {},\n  onClickButton: () => {}\n};\nexport const StyledInputWithButton = styled(StyledInput)`\n  padding-right: 108.142px;\n  &::placeholder {\n    color: ${palette.base.gray400};\n  }\n`;\nexport const InputAbsBlock = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  top: 6px;\n  right: 6px;\n`;\nconst flexAlignCenterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const InputAbsButton = styled(flexAlignCenterDiv)`\n  width: 84px;\n  height: 30px;\n  margin-left: 6px;\n  color: white;\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 12px;\n  letter-spacing: -0.738px;\n\n  background-color: ${({\n  isActive,\n  buttonColor\n}) => {\n  if (isActive) return buttonColor;\n  return palette.base.gray400;\n}};\n  border-radius: 4px;\n`;\nexport default InputWithButton;","map":{"version":3,"sources":["C:/WorkSpace/srpj3/srpj2/mrgo-frontend/components/modules/InputWithButton.js"],"names":["React","useEffect","useRef","useState","PropTypes","styled","palette","InputBlock","Label","StyledInput","MessageBlock","InputWithButton","buttonColor","buttonText","error","inputRef","label","pattern","placeholder","style","type","isButtonActive","isShowClearButton","value","onChange","disabled","onBlur","onClickButton","clearBtnRef","showClear","setShowClear","handleClearButton","e","target","current","window","addEventListener","removeEventListener","propTypes","string","oneOfType","bool","shape","any","oneOf","number","func","defaultProps","primary","blue","undefined","StyledInputWithButton","base","gray400","InputAbsBlock","div","flexAlignCenterDiv","InputAbsButton","isActive"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport palette from '../../styles/palette';\r\n\r\nimport { InputBlock, Label, StyledInput, MessageBlock } from './Input';\r\n\r\nconst InputWithButton = ({\r\n  buttonColor,\r\n  buttonText,\r\n  error,\r\n  inputRef,\r\n  label,\r\n  pattern,\r\n  placeholder,\r\n  style,\r\n  type,\r\n  isButtonActive,\r\n  isShowClearButton,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  onBlur = () => {},\r\n  onClickButton,\r\n}) => {\r\n  const clearBtnRef = useRef();\r\n  const [showClear, setShowClear] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleClearButton = e => {\r\n      if (e.target === clearBtnRef.current) onChange({ target: { value: '' } });\r\n    };\r\n\r\n    window.addEventListener('mousedown', handleClearButton);\r\n\r\n    return () => window.removeEventListener('mousedown', handleClearButton);\r\n  }, [onChange]);\r\n\r\n  return (\r\n    <>\r\n      {label && <Label>{label}</Label>}\r\n      <InputBlock>\r\n        <StyledInputWithButton\r\n          tabIndex={0}\r\n          ref={inputRef}\r\n          isShowClearButton={isShowClearButton}\r\n          isError={error}\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          style={style}\r\n          type={type}\r\n          value={value}\r\n          onFocus={() => setShowClear(true)}\r\n          onBlur={() => {\r\n            onBlur();\r\n            setShowClear(false);\r\n          }}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n        />\r\n        <InputAbsBlock>\r\n          <InputAbsButton\r\n            tabIndex={0}\r\n            buttonColor={buttonColor}\r\n            isActive={isButtonActive}\r\n            onClick={onClickButton}\r\n          >\r\n            {buttonText}\r\n          </InputAbsButton>\r\n        </InputAbsBlock>\r\n        {error && (\r\n          <MessageBlock type=\"error\">\r\n            <span>{error}</span>\r\n          </MessageBlock>\r\n        )}\r\n      </InputBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nInputWithButton.propTypes = {\r\n  buttonColor: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  inputRef: PropTypes.shape({\r\n    current: PropTypes.oneOfType([PropTypes.bool, PropTypes.any]),\r\n  }),\r\n  label: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  style: PropTypes.shape({}),\r\n  type: PropTypes.oneOf(['text', 'number', 'email']),\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  isButtonActive: PropTypes.bool,\r\n  isShowClearButton: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  onClickButton: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nInputWithButton.defaultProps = {\r\n  buttonText: 'button',\r\n  buttonColor: palette.primary.blue,\r\n  error: false,\r\n  inputRef: undefined,\r\n  label: undefined,\r\n  pattern: undefined,\r\n  placeholder: 'placeholder',\r\n  style: undefined,\r\n  type: 'text',\r\n  value: '',\r\n  isButtonActive: false,\r\n  isShowClearButton: false,\r\n  disabled: false,\r\n  onChange: () => {},\r\n  onBlur: () => {},\r\n  onClickButton: () => {},\r\n};\r\n\r\nexport const StyledInputWithButton = styled(StyledInput)`\r\n  padding-right: 108.142px;\r\n  &::placeholder {\r\n    color: ${palette.base.gray400};\r\n  }\r\n`;\r\n\r\nexport const InputAbsBlock = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  top: 6px;\r\n  right: 6px;\r\n`;\r\n\r\nconst flexAlignCenterDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InputAbsButton = styled(flexAlignCenterDiv)`\r\n  width: 84px;\r\n  height: 30px;\r\n  margin-left: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  line-height: 12px;\r\n  letter-spacing: -0.738px;\r\n\r\n  background-color: ${({ isActive, buttonColor }) => {\r\n    if (isActive) return buttonColor;\r\n    return palette.base.gray400;\r\n  }};\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport default InputWithButton;\r\n"]},"metadata":{},"sourceType":"module"}